version: '3.7'

services:

  prometheus:
    image: prom/prometheus:v2.9.2
    user: root
    volumes:
      - promconfig:/etc/prometheus
      - promdata:/prometheus
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
      - source: prometheus_rules
        target: /etc/prometheus/alert.rules
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - private_grafana
      - public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role==manager
      labels:
        - "traefik.docker.network=public"
        - "traefik.port=9090"
        - "traefik.backend=prometheus"
        - "traefik.enable=true"
        - "traefik.frontend.rule=Host:prometheus.docker.localhost"
        - "traefik.frontend.headers.SSLRedirect=true"
        - "traefik.frontend.entryPoints=http,https"

  grafana:
    image: grafana/grafana:6.2.1
    networks:
      - private_grafana
      - public
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      GF_SERVER_ROOT_URL: http://grafana.docker.localhost
      GF_SECURITY_ADMIN_USER: infra
      GF_SECURITY_ADMIN_PASSWORD: infra
      GF_USERS_ALLOW_SIGN_UP: "false"
      PROMETHEUS_ENDPOINT: http://prometheus:9090
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role==manager
      labels:
        - "traefik.docker.network=public"
        - "traefik.port=3000"
        - "traefik.backend=grafana"
        - "traefik.enable=true"
        - "traefik.frontend.rule=Host:grafana.docker.localhost"
        - "traefik.frontend.headers.SSLRedirect=true"
        - "traefik.frontend.entryPoints=http,https"

configs:

  prometheus_config:
    file: ./prometheus/configs/prometheus.yml
  prometheus_rules:
    file: ./prometheus/rules/alert.rules

volumes:

  grafana_data:
  promconfig: {}
  promdata: {}

networks:

  private_grafana:
    driver: overlay
    name: private_grafana
  public:
    external: true
